version: "3.8"

services:
  client:
    image: localhost:5000/client_install
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
    ports:
      - "80:8080"
    stdin_open: true

  server:
    image: localhost:5000/server_install
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
    environment:
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@${MONGO_URI}
      - PORT=${SRV_PORT}
      - NODE_ENV=${NODE_ENV}
    command: node src/server.js

  db:
    image: localhost:5000/db_install
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      # don't forget to create the volume with "docker volume create"
      # before deploying stack (see /README.md for details)
      - db_prod:/data/db

# front (client) and backend (server) data included in the 
# image (imutable containers), so no volumes are needed
volumes:
  db_prod: